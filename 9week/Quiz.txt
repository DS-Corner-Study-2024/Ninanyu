1.두꺼운 경계선이 생기지 않게 만드려면 outline 속성을 (none)으로 설정해야 한다.
2.데이터를 다루는 4개의 기능 (추가,조회,수정,삭제)을 앞 글자만 따서 (CRUD)라고 한다.
3.현실의 사물이나 개념을 프로그래밍 언어의 객체와 같은 자료구조로 표현하는 행위를 (데이터 모델링)이라고 한다.
4.(cursor)의 속성값을 변경하면 마우스 포인터 모양을 원하는 형태로 변경할 수 있다.
5.(목 데이터)란 모조품 데이터라는 뜻으로 기능을 완벽히 구현하지 않은 상태에서 테스트를 목적으로 사용하는 데이터다.
6.모든 아이템이 고유한 id를 가지게 하려면 (Ref 객체)를 사용해야 한다.
7.입력 폼을 초기화 하기 위해선 함수 setContent를 호출해 인수로 (빈 문자열)을 전달해야 한다.

1. none
2. CRUD
3. 데이터 모델링
4. cursor
5. 목 데이터
6. Ref 객체
7. 빈 문자열


1. 아래의 코드를 참고하여 새 할 일 아이템을 추가하는 onCreate를 생성하시오.
(Ref 객체를 사용해 아이템마다 고유 id를 가지게 하며, 목 데이터를 사용하지 않았음)

import { useState } from "react";
(..)

function App() {
  const [todo, setTodo] = useState([]); 

  return (
    (...)
  );
}
export default App;

답:
import { useState } from "react";
(..)

function App() {
  const [todo, setTodo] = useState([]); 

  return (
    (...)
  );
}
export default App;


2. 코드를 참고하여 스페이스바를 눌러 아이템 추가를 할 수 있게 코드를 구현하시오
(이때, 스페이스바는 32번이다.)

import { useState, useRef } from "react";
import "./TodoEditor.css";

const TodoEditor = ({ onCreate }) => {
  const [content, setContent] = useState("");
  const inputRef = useRef(); 

  (...)
  const onSubmit = () => {
    if (!content) { 
      inputRef.current.focus();
      return;
    } 
    onCreate(content);
    setContent("");
  };

  return (
    <div className="TodoEditor">
      <h4>새로운 Todo 작성하기 ✏ </h4>
      <div className="editor_wrapper">
        <input
          ref={inputRef} 
          value={content}
          onChange={onChangeContent}
          placeholder="새로운 Todo..."
        />
        <button onClick={onSubmit}>추가</button>
      </div>
    </div>
  );
};
export default TodoEditor;


답:
(...)
const TodoEditor = ({ onCreate }) => {
  (...)
  const onKeyDown = (e) => { 
    if (e.keyCode === 32) {
      onSubmit();
    } 
  };
  return(
    <div className="TodoEditor">
      <h4>새로운 Todo 작성하기 ✏ </h4>
      <div className="editor_wrapper">
        <input
          ref={inputRef}
          value={content}
          onChange={onChangeContent}
          onKeyDown={onKeyDown} 
          placeholder="새로운 Todo..."
        />
        <button onClick={onSubmit}>추가</button>
      </div>
    </div>
  )
};
export default TodoEditor;